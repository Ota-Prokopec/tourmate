### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  emailVerification: Boolean!
  experiences: [Experience!]!
  monuments: [Monument!]!
  myId: String!
  phoneVerification: Boolean!
  prefs: UsersPreferences

  """This is URL of profile picture. Not its id."""
  profilePictureURL: URL
  staus: Boolean!
  userId: String!
  username: String!
}

input CreateAccountInput {
  myId: String!
  username: String!
}

input CreateExperienceInput {
  location: Location!
  picture: String!
  placeName: String!
}

input CreateMonumentInput {
  about: String!
  location: Location!
  name: String!
  picture: String
  placeName: String!
}

type EmailLogin {
  session: String!
}

type Experience {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  imgSrc: URL!
  location: Location!
  placeDetail: PlaceDetail!
  placeDetailId: String!
  user: Account!
  userId: String!
}

input ExperienceInput {
  location: Location!
  zoom: Int!
}

type ExperienceLike {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  experienceId: String!
  userId: String!
}

scalar Location

type Monument {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  about: String
  creator: Account!
  creatorUserId: String!
  liked: MonumentLike
  likes: [MonumentLike!]!
  location: Location!
  name: String!
  nearExperiences: [Experience!]!

  """This it an URL not id of picture"""
  pictureURL: URL
  placeDetail: PlaceDetail!
  placeDetailId: String!
}

input MonumentInput {
  location: [Float!]!
  zoom: Int!
}

type MonumentLike {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  monumentId: String!
  user: Account!
  userId: String!
}

type Mutation {
  createExperience(input: CreateExperienceInput!): Experience!
  createMonument(input: CreateMonumentInput!): Monument!
}

type PlaceDetail {
  _collectionId: String!
  _createdAt: String!
  _databaseId: String!
  _id: String!
  _permissions: [String!]!
  _updatedAt: String!
  name: String!
}

type Query {
  createAccount(myId: String!, username: String!): Account!
  getAccount(userId: String): Account!
  getAccountByMyId(myId: String!): Account!
  getExperience(id: String!): Experience!
  getListOfExperiences(input: ExperienceInput): [Experience!]!
  getListOfMonuments(input: MonumentInput): [Monument!]!
  getMonument(id: String!): Monument!
  logInViaEmail(email: String!, password: String!): EmailLogin!
  updateProfilePicture(picture: String!): Account!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

type UsersPreferences {
  location: [Float!]
  termsAccepted: Boolean
}